#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define pii pair<ll, ll> 
#define vii vector<pii> 
#define pb push_back 
#define fi first 
#define el cout<<endl
#define se second 
#define sz(a) a.size();
#define all(x) (x).begin(), (x).end()
#define vll vector<ll> 
#define vi vector<int >
template<class T> bool ckmin(T& a, const T& b) { return b < a ? a = b, 1 : 0; }
template<class T> bool ckmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; }
#define f0(a) for(ll i = 0; i < (a); i++)
#define f1(a) for(ll i = 1; i <= (a); i++)
#define ms(a,n) memset(a,n,sizeof(a))
#define FOR(i,a,b) for(ll i=a;i<=b;i++)
#define FOD(i,b,a) for(int i=b;i>=a;i--)
#define faster ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
const ll MOD = 1e9 + 7;

int n,q;
int bit[100005];
int  get(int x ){
    int s = 0;
    while(x>0){
        s += bit[x];
        x -= (x & -x);
    }
    return s;
}


void update(int x,int v){
    while(x<=n){
        bit[x] += v;
        x += (x & -x);
    }
    return;
}





int main()
{
    
    faster;
    cin >> n >> q;
    while(q--){
        int t;
        cin >> t;
        if(t==1){
            int x, v;
            cin >> x >> v;
            update(x, v);
        }else {
            int x;
            cin>> x ;
            cout << get(x);
            el;
        }
    }
}
=================code sạch hơn ở vòng while so với code trên 

int n,q;
int bit[100005];
int  get(int x ){
    int s = 0;
    for (;x>0;x-=(x&-x))
    {
        s += bit[x];
    }
    return s;
}


void update(int x,int v){
    //maxn là dữ kiện đề bài cho 
    for (;x<maxn;x+=(x&-x))
    {
        bit[x] += v;
    }
    return;
}





int main()
{
    
    faster;
    cin >> n >> q;
    while(q--){
        int t;
        cin >> t;
        if(t==1){
            int x, v;
            cin >> x >> v;
            update(x, v);
        }else {
            int x;
            cin>> x ;
            cout << get(x);
            el;
        }
    }
}
===